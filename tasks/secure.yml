---
# Defines tasks to do the equivalent of mysql_secure_installation.

- name: Check for existing MySQL root user password
  stat: >
    path=/root/.my.cnf
  register: root_password_file
  tags:
    - mysql
    - percona

- name: Request new password for MySQL root user
  command: >
    curl -H "Content-Type:text/plain" https://ashpass.herokuapp.com/14
  register: root_db_password
  when: root_password_file.stat.exists == false
  tags:
    - mysql
    - percona

- name: Notify Slack of new MySQL root password
  slack: >
    token="{{ mysql_slack_token }}"
    domain="{{ mysql_slack_domain }}"
    channel="#notify"
    username="Ansible on {{ inventory_hostname }}"
    msg="MySQL root password is `{{ root_db_password.stdout }}`"
  when: root_db_password is defined and root_db_password.stdout != ''
  tags:
    - mysql
    - percona

- name: Set the root password
  mysql_user: >
    user=root
    password={{ root_db_password.stdout }}
    host={{ item }}
  with_items:
    - "{{ ansible_hostname }}"
    - "127.0.0.1"
    - "::1"
    - "localhost"
  when: root_db_password is defined and root_db_password.stdout != '' and ansible_hostname != 'localhost'
  tags:
    - mysql
    - percona

- name: Set the root password
  mysql_user: >
    user=root
    password={{ root_db_password.stdout }}
    host={{ item }}
  with_items:
    - "127.0.0.1"
    - "::1"
    - "localhost"
  when: root_db_password is defined and root_db_password.stdout != '' and ansible_hostname == 'localhost'
  tags:
    - mysql
    - percona

- name: Save MySQL root user password file
  template: >
    src=dot-my-cnf.j2
    dest=/root/.my.cnf
    mode=0400 owner=root group=root
  when: root_db_password is defined and root_db_password.stdout != ''
  tags:
    - mysql
    - percona

- name: Ensure anonymous MySQL users are removed
  mysql_user: >
    name=''
    host={{ item }}
    state=absent
  with_items:
    - 'localhost'
    - '{{ ansible_hostname }}'
  tags:
    - mysql
    - percona

- name: Remove the MySQL test database
  mysql_db: >
    db=test
    state=absent
  tags:
    - mysql
    - percona
