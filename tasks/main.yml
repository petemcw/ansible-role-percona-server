---
# Defines tasks to install and configure Percona server

- name: Include the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - mysql
    - percona

- name: Check for existing MySQL data
  stat: >
    path={{ mysql_data_dir }}
  register: mysql_data_path
  tags:
    - mysql
    - percona

- name: Install packages for Debian derivatives
  apt: >
    pkg={{ item }}
    update_cache=yes
    state=latest
  with_items: mysql_server_packages
  when: ansible_os_family == 'Debian'
  tags:
    - mysql
    - percona

- name: Stop server service
  service: >
    name={{ mysql_service }}
    state=stopped
  when: mysql_data_path.stat.exists == false
  tags:
    - mysql
    - percona

- name: Find existing MySQL data files
  command: >
    find {{ mysql_data_dir }} -type f -iname "ibdata*" -o -iname "ib_log*" -o -iname "*.log" -o -iname "*.index" -o -iname "*.err"
  when: mysql_data_path.stat.exists == false
  register: dumpfiles
  tags:
    - mysql
    - percona

- name: Remove default MySQL data files
  file: >
    path={{ item }}
    state=absent
  when: mysql_data_path.stat.exists == false
  with_items: dumpfiles.stdout_lines
  tags:
    - mysql
    - percona

- name: Write configuration templates
  template: >
    src={{ item.src }}
    dest={{ item.dest }}
    mode=0644 owner=root group=root
    backup=yes
  with_items:
      - { src: 'mysqld-cnf.j2', dest: '{{ mysql_config_dir }}/conf.d/mysqld.cnf' }
  notify:
    - restart mysql
  tags:
    - mysql
    - percona

- name: Start server on server boot
  service: >
    name={{ mysql_service }}
    state=started
    enabled=yes
  ignore_errors: true
  tags:
    - mysql
    - percona

- include: secure.yml
- include: extra.yml
